micronaut.application.name=unrated
micronaut.server.port=8000

# JWT security auth
micronaut.security.token.jwt.signatures.secret.generator.secret=${JWT_GENERATOR_SIGNATURE_SECRET\:pleaseChangeThisSecretForANewOne}
micronaut.security.token.jwt.generator.refresh-token.secret="${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
micronaut.security.authentication=cookie
micronaut.security.token.refresh.cookie.enabled=true
micronaut.security.redirect.enabled = false

# Enable POST /login & POST /oauth/access_token for token refresh
micronaut.security.endpoints.login.enabled=true
micronaut.security.endpoints.oauth.enabled=true



# Allow GraphQL api if authenticated
micronaut.security.intercept-url-map[0].pattern=/graphql
micronaut.security.intercept-url-map[0].http-method=POST
micronaut.security.intercept-url-map[0].access=isAuthenticated()

micronaut.security.intercept-url-map[1].pattern=/graphiql
micronaut.security.intercept-url-map[1].http-method=GET
micronaut.security.intercept-url-map[1].access=isAnonymous()

# Default port with SSL: 8443
#micronaut.ssl.enabled=true
#micronaut.ssl.build-self-signed=true

#datasources.default.db-type=postgres
#datasources.default.dialect=POSTGRES
#datasources.default.driver-class-name=org.postgresql.Driver

jpa.default.properties.hibernate.hbm2ddl.auto=update
jpa.default.properties.hibernate.show_sql=false

# <H2 JPA testing
datasources.default.password=${JDBC_PASSWORD:""}
datasources.default.url=${JDBC_URL:`jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE`}
datasources.default.username=${JDBC_USER:sa}
datasources.default.driver-class-name=${JDBC_DRIVER:org.h2.Driver}
# >

jackson.serialization-inclusion=ALWAYS

graphql.enabled=true

graphql.graphiql.enabled=true

